<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="com.guan.springmvc.web.controller"/>

    <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
    <mvc:annotation-driven/>
    <!-- 指定自己定义的validator -->
    <!--<mvc:annotation-driven validator="validator"/>-->

    <!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
        <!--<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>-->
        <!--&lt;!&ndash; 如果不加默认到 使用classpath下的 ValidationMessages.properties &ndash;&gt;-->
        <!--<property name="validationMessageSource" ref="messageSource"/>-->
    <!--</bean>-->


    <!-- 支持返回json(避免IE在ajax请求时，返回json出现下载 ) -->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="mappingJacksonHttpMessageConverter"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean id="mappingJacksonHttpMessageConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>text/plain;charset=UTF-8</value>-->
                <!--<value>application/json;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
    <!-- 支持返回json -->

    <!-- 静态资源(js、image等)的访问 -->
    <mvc:default-servlet-handler/>
    <!--ViewResolver 视图解析器-->
    <!-- 对模型视图添加前后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />-->
    </bean>

    <!-- 配置springMVC处理上传文件的信息 -->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
        <!--<property name="defaultEncoding" value="utf-8"/>-->
        <!--<property name="maxUploadSize" value="10485760000"/>-->
        <!--<property name="maxInMemorySize" value="40960"/>-->
    <!--</bean>-->


    <!-- 访问静态文件（jpg,js,css）的方法 -->
    <!--<mvc:resources location="/files/" mapping="/files/**" />-->
    <!--<mvc:resources location="/filesOut/" mapping="/filesOut/**" />-->
    <!--<mvc:resources location="/scripts/" mapping="/scripts/**" />-->
    <!--<mvc:resources location="/styles/" mapping="/styles/**" />-->
    <!--<mvc:resources location="/Views/" mapping="/Views/**" />-->

</beans>